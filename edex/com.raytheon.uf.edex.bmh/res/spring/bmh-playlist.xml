<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean id="playlistManager" class="com.raytheon.uf.edex.bmh.playlist.PlaylistManager">
		<constructor-arg ref="edexMessageLogger" />
		<property name="playlistDao" ref="playlistDao" />
		<property name="programDao" ref="programDao" />
		<property name="zoneDao" ref="zoneDao" />
		<property name="areaDao" ref="areaDao" />
		<property name="broadcastMsgDao" ref="broadcastMsgDao" />
		<property name="transmitterGroupDao" ref="transmitterGroupDao" />
		<property name="messageTypeDao" ref="messageTypeDao" />
        <property name="inputMessageDao" ref="inputMessageDao" />
	</bean>

	<bean id="playlistStateManager" class="com.raytheon.uf.edex.bmh.playlist.PlaylistStateManager">
		<property name="playlistDao" ref="playlistDao" />
		<property name="messageTypeDao" ref="messageTypeDao" />
		<property name="broadcastMsgDao" ref="broadcastMsgDao" />
	</bean>

	<camelContext id="bmh-playlist" xmlns="http://camel.apache.org/schema/spring"
		errorHandlerRef="errorHandler">

		<route id="bmh-schedule">
			<from uri="jms-durable:queue:BMH.Schedule" />
			<doTry>
                <bean ref="serializationUtil" method="transformFromThrift" />
				<bean ref="broadcastMsgDao" method="restoreGroup" />
				<bean ref="playlistManager" method="newMessage" />
				<doCatch>
					<exception>java.lang.Throwable</exception>
					<to uri="log:bmh?level=ERROR" />
				</doCatch>
			</doTry>
		</route>

		<route id="bmhPlaylistManagerConfig">
			<from uri="jms-durable:topic:BMH.Config" />
			<doTry>
				<bean ref="serializationUtil" method="transformFromThrift" />
				<filter>
					<simple>${body} is
						"com.raytheon.uf.common.bmh.notify.config.SuiteConfigNotification"
					</simple>
					<bean ref="playlistManager" method="processSuiteChange" />
				</filter>
				<filter>
					<simple>${body} is
						"com.raytheon.uf.common.bmh.notify.config.ProgramConfigNotification"
					</simple>
					<bean ref="playlistManager" method="processProgramChange" />
				</filter>
				<filter>
					<simple>${body} is
						"com.raytheon.uf.common.bmh.notify.config.TransmitterGroupConfigNotification"
					</simple>
					<bean ref="playlistManager" method="processTransmitterGroupChange" />
				</filter>
				<filter>
					<simple>${body} is
						"com.raytheon.uf.common.bmh.notify.config.ResetNotification"
					</simple>
					<bean ref="playlistManager" method="processResetNotification" />
				</filter>
                <filter>
                    <simple>${body} is
                        "com.raytheon.uf.common.bmh.notify.config.MessageActivationNotification"
                    </simple>
                    <bean ref="playlistManager" method="processMessageActivationChange" />
                </filter>
                <filter>
                	<simple>${body} is
                        "com.raytheon.uf.common.bmh.notify.config.MessageForcedExpirationNotification"
                	</simple>
                	<bean ref="playlistManager" method="processMessageForcedExpiration" />
                </filter>
				<doCatch>
					<exception>java.lang.Throwable</exception>
					<to uri="log:bmh?level=ERROR" />
				</doCatch>
			</doTry>
		</route>

		<route id="bmhPlaylistStateRoute">
			<from uri="jms-generic:topic:BMH.Status" />
			<doTry>
				<pipeline>
					<bean ref="serializationUtil" method="transformFromThrift" />
					<filter>
						<simple>${body} is
							"com.raytheon.uf.common.bmh.notify.PlaylistSwitchNotification"
						</simple>
						<bean ref="playlistStateManager" method="processPlaylistSwitchNotification" />
					</filter>
					<filter>
						<simple>${body} is
							"com.raytheon.uf.common.bmh.notify.MessagePlaybackStatusNotification"
						</simple>
						<bean ref="playlistStateManager" method="processMessagePlaybackStatusNotification" />
					</filter>
					<filter>
						<simple>${body} is
							"com.raytheon.uf.common.bmh.notify.LiveBroadcastSwitchNotification"
						</simple>
						<bean ref="playlistStateManager" method="processLiveBroadcastSwitchNotification" />
					</filter>
					<filter>
						<simple>${body} is
							"com.raytheon.uf.common.bmh.notify.MaintenanceMessagePlayback"
						</simple>
						<bean ref="playlistStateManager" method="processMaintenanceMessagePlayback" />
					</filter>
					<filter>
						<simple>${body} is
							"com.raytheon.uf.common.bmh.notify.DacTransmitShutdownNotification"
						</simple>
						<bean ref="playlistStateManager" method="handleDacTransmitShutdown" />
					</filter>
                    <filter>
                        <simple>${body} is
                            "com.raytheon.uf.common.bmh.notify.NoPlaybackMessageNotification"
                        </simple>
                        <bean ref="playlistStateManager" method="processNoPlaybackMessageNotification" />
                    </filter>
				</pipeline>
				<doCatch>
					<exception>java.lang.Throwable</exception>
					<to uri="log:bmh?level=ERROR" />
				</doCatch>
			</doTry>
		</route>
	</camelContext>

	<bean factory-bean="contextManager" factory-method="registerContextStateProcessor">
		<constructor-arg ref="bmh-playlist" />
		<constructor-arg ref="playlistManager" />
	</bean>
</beans>