# Last Modified: 03/31/2015
#
# Sample notification.properties file. To utilize the configurable notification
# actions, a file similar to this one will need to be copied into 
# $BMH_HOME/conf.

# Notify actions should be defined using the following template:
#	bmh.notify.{category_code}.{priority}={ACTION}
#
# In the template:
#	{category_code} is the numeric code that corresponds with the bmh category
#		that you would like to define an action for. Refer to the documentation
#		for a list of categories and their associated numeric codes.
#
#	{priority} is a String representing the Priority and it can be set to one of:
#		{ FATAL, ERROR, WARN, INFO, DEBUG }
#
#	{ACTION} refers to a String identifier that corresponds to an action that will
#		be performed. ACTION can be one of or a combination of: { LOG, AV, AV_AUDIO}.
#		Multiple actions must be separated with the plus (+) symbol when they are
#		specified.
#		LOG: log the notification to the system log file
#		AV: send the notification to AlertViz
#		AV_AUDIO: send the notification to AlertViz and attempt to trigger the
#			playback of a specified audio file.
#		(NOTE: two notifications will be sent to AlertViz if both AV and AV_AUDIO
#		are specified)
#
# -----------------------------------------------------------------------------------
#
# The following template should be used to specify an audio playback file:
#	bmh.notify.{category_code}.{priority}.audio={FILE}
#
# In the template: 
#	{category_code} is the numeric code that corresponds with the bmh category
#		that you would like to define an action for. Refer to the documentation
#		for a list of categories and their associated numeric codes.
#
#	{priority} is a String representing the Priority and it can be set to one of:
#		{ FATAL, ERROR, WARN, INFO, DEBUG }
#
#	{FILE} refers to the audio file that should be sent to AlertViz for playback.
#		The {FILE} attribute must refer to the path to an audio file that is in
#		the alertVizAudio localization directory.
#
# The audio notification property can only be used when paired with an associated
# notification action. That is, the notification action and the associated audio
# property must have the same {category_code} and {priority}. Audio properties will
# be ignored if there is not an associated notification action. Audio playback
# actions will be ignored if there is not an associated audio property.
# 3 = TTS_FATAL_ERROR
# Specific to the TTS Components: used to indicate that a TTS operation has
# failed due to a system or server error outside the jurisdiction of the
# TTS Software and/or TTS components (ex: disk full, networking problems,
# etc.)
bmh.notify.3.ERROR=AV+LOG
# 4 = TTS_SYSTEM_ERROR
# Specific to the TTS Components: an error that cannot be recovered from. It will
# not be possible to synthesize the current message at all.
bmh.notify.4.ERROR=AV+LOG
# 8 = MESSAGE_VALIDATION_FAILED
# Specific to the message validation component: used to indicate that an
# unexpected error occured during validation. Validation never actually finished.
bmh.notify.8.ERROR=AV+LOG
# 19 = SILENCE
# The Silence Alarm.
bmh.notify.19.ERROR=AV_AUDIO
bmh.notify.19.ERROR.audio=alert.wav
# 21 = DAC_TRANSMIT_BROADCAST_DELAY
# indicates that a warning or interrupt cannot be broadcast on a
# transmitter due to an active broadcast live session.
bmh.notify.21.ERROR=AV_AUDIO
bmh.notify.21.ERROR.audio=alert.wav
# 25 = SAME_DURATION_TRUNCATION
# indicates that a SAME Message has been truncated to two minutes during
# the initial broadcast.
bmh.notify.25.ERROR=AV_AUDIO+LOG
bmh.notify.25.ERROR.audio=alert.wav
# 26 = SAME_AREA_TRUNCATION
# indicates that one or more areas have not been included in a SAME tone
# because the maximum number of areas has been exceeded.
bmh.notify.26.ERROR=AV_AUDIO+LOG
bmh.notify.26.ERROR.audio=alert.wav
# 27 = WTCH_OR_WRN_NOT_BROADCAST
# indicates that a watch or warning message has expired before it could be
# broadcast.
bmh.notify.27.ERROR=AV_AUDIO+LOG
bmh.notify.27.ERROR.audio=alert.wav
# 28 = MESSAGE_VALIDATION_EXPIRED
# indicates that a message failed validation because it was already expired
# upon arrival.
bmh.notify.28.ERROR=AV+LOG
# 29 = MESSAGE_VALIDATION_UNPLAYABLE
# indicates that a message failed validation because it was not eligible
# for playback on any of the existing transmitter groups due to the fact
# that it was not found in any of the geographical areas recognized by the
# existing transmitter groups.
bmh.notify.29.ERROR=AV+LOG
# 30 = MESSAGE_VALIDATION_UNDEFINED
# indicates that a message failed validation because an associated message
# type was not found in the system.
bmh.notify.30.ERROR=AV+LOG
# 31 = MESSAGE_VALIDATION_UNASSIGNED
# indicates that the message failed validation because the associated
# message type is not in any suites associated with the transmitter groups
# eligible for playback indicated by the geographical areas associated with
# the message.
bmh.notify.31.ERROR=AV+LOG
# 32 = MESSAGE_VALIDATION_DUPLICATE
# indicates that a message failed validation because it was a duplicate of
# a message that had been previously processed.
bmh.notify.32.ERROR=LOG
# 33 = MESSAGE_VALIDATION_UNACCEPTABLE
# indicates that a message failed validation because it contained
# unacceptable words.
bmh.notify.33.ERROR=AV+LOG
# 35 = DAC_SYNC_ISSUE
# indicates that a DAC and BMH {@link Dac} are out of sync.
bmh.notify.35.ERROR=AV+LOG
# 36 = DAC_SYNC_VERIFY_FAIL
# indicates that an attempt to verify that BMH {@link Dac}s were in sync
# with the DACs has failed.
bmh.notify.36.ERROR=AV+LOG
# 37 = COMMS_BALANCE_DISABLED
# indicates that clustering has been disabled in Comms Manager.
bmh.notify.37.ERROR=AV+LOG