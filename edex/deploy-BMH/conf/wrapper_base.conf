#********************************************************************
##
# This software was developed and / or modified by Raytheon Company,
# pursuant to Contract DG133W-05-CQ-1067 with the US Government.
# 
# U.S. EXPORT CONTROLLED TECHNICAL DATA
# This software product contains export-restricted data whose
# export/transfer/disclosure is restricted by U.S. law. Dissemination
# to non-U.S. persons whether in the United States or abroad requires
# an export license or other authorization.
# 
# Contractor Name:        Raytheon Company
# Contractor Address:     6825 Pine Street, Suite 340
#                         Mail Stop B8
#                         Omaha, NE 68106
#                         402.291.0100
# 
# See the AWIPS II Master Rights File ("Master Rights File.pdf") for
# further licensing information.
##
# Wrapper Properties
#********************************************************************
##############################################################################
# Yajsw wrapper configuration for BMH CommsManager application.
#
#     SOFTWARE HISTORY
#    
#    Date            Ticket#       Engineer       Description
#    ------------    ----------    -----------    --------------------------
#    09/09/14        3456          bkowal         Initial Creation.
#    10/21/14        3687          bsteffen       Created base file
#    12/04/14        3890          bkowal         Remove required tanuki property.
#    12/08/14        3651          bkowal         Abstract wrapper.logfile.
##############################################################################
wrapper.debug=false
set.default.BMH_HOME=../..
wrapper.working.dir=${BMH_HOME}/bin
# required due to java bug: 
# http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4388188
# not sure if the yajsw developers have any intention of
# implementing the work-around (solution?) stated in the
# ticket.
wrapper.fork_hack=true
# at a minimum: prevents the printing of the "Invalid parameter" messages
wrapper.console.pipestreams=true

# Java Application
wrapper.java.command=${JAVA}

# Java Classpath. Add class path elements as needed starting from 1.

# include ANY jar files that are found in the locations denoted by
# wrapper.search.java.classpath.#
wrapper.search.java.classpath.1=${EDEX_HOME}/lib/plugins
wrapper.search.java.classpath.2=${EDEX_HOME}/lib/dependencies/ch.qos.logback
wrapper.search.java.classpath.3=${EDEX_HOME}/lib/dependencies/org.slf4j
wrapper.search.java.classpath.4=${EDEX_HOME}/lib/dependencies/org.apache.thrift
wrapper.search.java.classpath.5=${EDEX_HOME}/lib/dependencies/net.sf.cglib
wrapper.search.java.classpath.6=${EDEX_HOME}/lib/dependencies/org.apache.qpid
wrapper.search.java.classpath.7=${EDEX_HOME}/lib/dependencies/javax.jms
wrapper.search.java.classpath.8=${EDEX_HOME}/lib/dependencies/com.google.guava
wrapper.search.java.classpath.9=${EDEX_HOME}/lib/dependencies/org.apache.commons.configuration
wrapper.search.java.classpath.10=${EDEX_HOME}/lib/dependencies/org.apache.commons.lang
wrapper.search.java.classpath.11=${EDEX_HOME}/lib/dependencies/org.apache.commons.collections

# the main comms manager java class that will be started
wrapper.java.app.mainclass=com.raytheon.bmh.comms.CommsManager

# Java Additional Parameters
# note that n is the parameter number starting from 1.
# component only exists to allow us to query for running
# processes.
wrapper.java.additional.1=-Dbmh.component=CommsManager
wrapper.java.additional.2=-Xms128m
wrapper.java.additional.3=-Xmx256m
wrapper.java.additional.4=-XX:+UseConcMarkSweepGC
wrapper.java.additional.5=-XX:+CMSIncrementalMode
wrapper.java.additional.6=-Dthrift.stream.maxsize=20
wrapper.java.additional.7=-Duser.timezone=GMT
wrapper.java.additional.8=-Dqpid.dest_syntax=BURL
wrapper.java.additional.9=-Dlogback.configurationFile=${BMH_HOME}/conf/logback-commsmanager.xml

wrapper.jvm.parameter.order.1=-Dbmh.component
wrapper.jvm.parameter.order.LAST=-classpath

wrapper.ping.interval=5
wrapper.ping.timeout=30

# NOTE: script must be located at /awips2/bmh/bin/yajsw/scripts for it to be found
wrapper.script.ABORT=wrapperCapture.sh
wrapper.script.ABORT.timeout=120
wrapper.script.RESTART=wrapperCapture.sh
wrapper.script.RESTART.timeout=120

#********************************************************************
# Monitor the Application
#********************************************************************
wrapper.java.monitor.heap = true
# warning messages will be logged; it is also possible to send an e-mail
wrapper.java.monitor.heap.threshold.percent = 90

wrapper.java.monitor.deadlock = true
wrapper.filter.trigger.deadlock.restart=wrapper.java.monitor.deadlock: DEADLOCK IN THREADS:
wrapper.filter.action.deadlock.restart=RESTART

# restart the application if it runs out of memory
wrapper.filter.trigger.1=java.lang.OutOfMemoryError
wrapper.filter.action.1=RESTART

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=M

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=M

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Set the log rollover mode for the log.
#   DATE - creates a new file each day - file name must include YYYYMMDD.
#   SIZE - uses log size for log roll-over.
wrapper.logfile.rollmode=DATE

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=7

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=${CONSOLE_LOGLEVEL}

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=${BMH_HOME}/logs/${logfile_base}-YYYYMMDD.log

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=CommsManager
