//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.06.12 at 12:58:15 PM CDT 
//

/**
 * JAXB representation of strength.datatype
 * 
 * <pre>
 * 
 * SOFTWARE HISTORY
 * 
 * Date         Ticket#    Engineer    Description
 * ------------ ---------- ----------- --------------------------
 * Jun 12, 2014 3259       bkowal      Initial creation
 * 
 * </pre>
 * 
 * @author bkowal
 * @version 1.0
 */

package com.raytheon.uf.common.bmh.schemas.ssml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for strength.datatype.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="strength.datatype">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="none"/>
 *     &lt;enumeration value="x-weak"/>
 *     &lt;enumeration value="weak"/>
 *     &lt;enumeration value="medium"/>
 *     &lt;enumeration value="strong"/>
 *     &lt;enumeration value="x-strong"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "strength.datatype")
@XmlEnum
public enum StrengthDatatype {

    @XmlEnumValue("none")
    NONE("none"),
    @XmlEnumValue("x-weak")
    X_WEAK("x-weak"),
    @XmlEnumValue("weak")
    WEAK("weak"),
    @XmlEnumValue("medium")
    MEDIUM("medium"),
    @XmlEnumValue("strong")
    STRONG("strong"),
    @XmlEnumValue("x-strong")
    X_STRONG("x-strong");
    private final String value;

    StrengthDatatype(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static StrengthDatatype fromValue(String v) {
        for (StrengthDatatype c: StrengthDatatype.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
